// <auto-generated />
using System;
using HACS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HACS.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20241216092430_middle_name")]
    partial class middle_name
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HACS.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VolunteerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.Donation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonationAdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DonationAdminId");

                    b.HasIndex("DonorId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("HACS.Models.Volunteer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.DonationAdmin", b =>
                {
                    b.HasBaseType("HACS.Models.DonorManagement.User");

                    b.HasDiscriminator().HasValue("DonationAdmin");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.Donor", b =>
                {
                    b.HasBaseType("HACS.Models.DonorManagement.User");

                    b.HasDiscriminator().HasValue("Donor");
                });

            modelBuilder.Entity("HACS.Models.Assignment", b =>
                {
                    b.HasOne("HACS.Models.Volunteer", "Volunteer")
                        .WithMany("Assignments")
                        .HasForeignKey("VolunteerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.Donation", b =>
                {
                    b.HasOne("HACS.Models.DonorManagement.DonationAdmin", null)
                        .WithMany("ReviewedDonations")
                        .HasForeignKey("DonationAdminId");

                    b.HasOne("HACS.Models.DonorManagement.Donor", null)
                        .WithMany("DonationHistory")
                        .HasForeignKey("DonorId");
                });

            modelBuilder.Entity("HACS.Models.Volunteer", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.DonationAdmin", b =>
                {
                    b.Navigation("ReviewedDonations");
                });

            modelBuilder.Entity("HACS.Models.DonorManagement.Donor", b =>
                {
                    b.Navigation("DonationHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
